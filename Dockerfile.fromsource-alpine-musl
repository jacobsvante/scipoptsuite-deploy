ARG ALPINE_IMAGE=alpine:3.19
FROM ${ALPINE_IMAGE} as builder_base

ENV ALPINE_IMAGE=$ALPINE_IMAGE
ENV LAPACK_LFLAGS="-llapack -lblas -lgfortran -lm"

WORKDIR /work

RUN apk add --no-cache \
    musl-dev \
    musl-utils \
    curl \
    cmake \
    make \
    gcc \
    g++ \
    boost-dev \
    gfortran \
    zlib-static \
    m4 \
    patch

# NOTE: libz.so gets picked up by soplex and scip otherwise
RUN rm /lib/libz.so

# config.site seems to be read by gmp, mumps and ipopt. At least if the logs are to
# be believed.
RUN mkdir -p scip_install/share && cat <<EOF > /work/scip_install/share/config.site
enable_shared=no
with_pic=yes
LT_LDFLAGS=-all-static
LDFLAGS='-no-pie -static'
EOF

# # Build a static zlib
# FROM builder_base as zlib
# ARG ZLIB_VERSION=1.3.1
# RUN curl -L https://github.com/madler/zlib/archive/refs/tags/v${ZLIB_VERSION}.tar.gz \
#         | tar -xz --strip-components 1
# RUN mkdir build \
#     && cd build \
#     && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX=/work/scip_install .. \
#     && make

# FROM builder_base as boost
# ARG BOOST_VERSION=1.82.0
# RUN curl -L https://boostorg.jfrog.io/artifactory/main/release/1.82.0/source/boost_$(echo ${BOOST_VERSION} | tr . _).tar.bz2 \
#         | tar -xj --strip-components 1

FROM builder_base as lapack
ARG LAPACK_VERSION=3.12.0
RUN curl -L https://github.com/Reference-LAPACK/lapack/archive/refs/tags/v${LAPACK_VERSION}.tar.gz \
        | tar -xz --strip-components 1
RUN mkdir build \
    && cd build \
    && cmake -DCMAKE_INSTALL_PREFIX=/work/scip_install .. \
    && make -j

# GMP
# Homepage: https://gmplib.org/
# Download from: https://github.com/pmmp/DependencyMirror
FROM builder_base AS gmp
ARG GMP_VERSION=6.3.0
RUN mkdir build && \
    curl -L https://github.com/pmmp/DependencyMirror/releases/download/mirror/gmp-${GMP_VERSION}.tar.xz \
        | tar -xJ --strip-components 1 -C build
RUN cd build \
    && ./configure --with-pic --disable-shared --enable-cxx --prefix=/work/scip_install \
    && make install -j

FROM builder_base AS metis
ARG METIS_VERSION=5.1.1
RUN mkdir metis gklib metis-build
RUN curl -L https://github.com/KarypisLab/GKlib/archive/refs/tags/METIS-v${METIS_VERSION}-DistDGL-0.5.tar.gz \
        | tar -xz --strip-components 1 -C gklib
RUN curl -L https://github.com/KarypisLab/METIS/archive/refs/tags/v${METIS_VERSION}-DistDGL-v0.5.tar.gz \
        | tar -xz --strip-components 1 -C metis-build
RUN cd gklib \
    && make \
    && make install \
    && make config prefix=/work/gklib
RUN cd metis-build \
    && make config prefix=/work/metis/ gklib_path=/work/gklib \
    && make \
    && make install

# MUMPS
# https://github.com/coin-or-tools/ThirdParty-Mumps
FROM builder_base AS mumps
ARG THIRDPARTY_MUMPS_VERSION=3.0.5
RUN curl -L https://github.com/coin-or-tools/ThirdParty-Mumps/archive/refs/tags/releases/${THIRDPARTY_MUMPS_VERSION}.tar.gz \
        | tar -xz --strip-components 1 \
    && ./get.Mumps
COPY --from=lapack /work/build/lib /usr/lib
COPY --from=metis /work/metis /work/metis
RUN ./configure \
        --enable-shared=no \
        --enable-static=yes \
        --prefix=/work/scip_install \
        --with-metis-cflags="-I/work/metis/include/" \
        --with-metis-lflags="-L/work/metis/lib -lmetis -lm" \
        --with-lapack-lflags="${LAPACK_LFLAGS}" \
        || (cat config.log && exit 1) \
    && make -j \
    && make install

# IPOPT
# https://github.com/coin-or/Ipopt
# https://coin-or.github.io/Ipopt/INSTALL.html
# TODO: Fix issue with running tests
FROM builder_base AS ipopt
ARG IPOPT_VERSION=3.14.12
RUN curl -L https://github.com/coin-or/Ipopt/archive/refs/tags/releases/${IPOPT_VERSION}.tar.gz \
        | tar -xz --strip-components 1
COPY --from=lapack /work/build/lib /usr/lib
COPY --from=mumps /work/scip_install /work/scip_install
RUN mkdir build \
    && cd build \
    && ../configure --prefix=/work/scip_install/ \
        --disable-java \
        --disable-sipopt \
        --with-lapack-lflags="${LAPACK_LFLAGS}" \
    && make -j$(nproc) \
    && make test V=1 || : \
    && make install

# Soplex
# https://github.com/scipopt/soplex
# https://soplex.zib.de/doc/html/INSTALL.php
# TODO: Support papilo?
FROM builder_base AS soplex
ARG SOPLEX_VERSION=7.0.0
RUN curl -L https://github.com/scipopt/soplex/archive/refs/tags/release-$(echo ${SOPLEX_VERSION} | tr -d .).tar.gz \
    | tar -xz --strip-components 1
COPY --from=gmp /work/scip_install /work/scip_install
RUN mkdir build \
    && cd build \
    && cmake .. \
        -DBoost_INCLUDE_DIR=/usr/lib \
        -DZLIB_INCLUDE_DIR=/lib \
        -DCMAKE_INSTALL_PREFIX=/work/scip_install \
        -DCMAKE_BUILD_TYPE=Release \
        -DGMP=true \
        -DPAPILO=false \
        -DGMP_DIR=/work/scip_install \
        -DBOOST=true \
    && make -j$(nproc) \
    # && make test \
    && make install
RUN ldd scip_install/bin/soplex

# SCIP
# https://github.com/scipopt/scip
# https://scipopt.org/doc/html/md_INSTALL.php
FROM builder_base AS scip
ARG SCIP_VERSION=9.0.0
RUN curl -L https://github.com/scipopt/scip/archive/refs/tags/v$(echo $SCIP_VERSION | tr -d .).tar.gz \
    | tar -xz --strip-components 1
COPY --from=lapack /work/build/lib/ /usr/lib/
COPY --from=metis /work/metis /work/metis
COPY --from=gmp /work/scip_install /work/scip_install
COPY --from=soplex /work/scip_install /work/scip_install
COPY --from=ipopt /work/scip_install /work/scip_install
RUN mkdir build \
    && cd build \
    && cmake .. \
        -DCMAKE_INSTALL_PREFIX=/work/scip_install \
        -DCMAKE_BUILD_TYPE=Release \
        -DLPS=spx \
        -DSYM=snauty \
        -DSOPLEX_DIR=/work/scip_install \
        -DPAPILO=false \
        -DZIMPL=false \
        -DGMP=true \
        -DREADLINE=false \
        -DIPOPT=true \
        -DIPOPT_DIR=/work/scip_install \
        -DGMP_DIR=/work/scip_install \
        -DSHARED=false \
    && make -j$(nproc) VERBOSE=true \
    # && MAXJOBS=$(nproc) make test \
    && make install

# # Collect all files and compress them as zip and tar.gz
# FROM scip AS compress
# RUN apk add --no-cache zip \
#     && mv scip_install/lib64/* scip_install/lib/. \
#     && rmdir scip_install/lib64 \
#     && zip -9 -r /work/scipoptsuite-linux.zip scip_install/lib scip_install/include scip_install/bin \
#     && tar -czvf /work/scipoptsuite-linux.tar.gz scip_install/lib scip_install/include scip_install/bin

# # Check that soplex and scip can run on Alpine Linux
# FROM alpine:3.19 AS alpine_tester
# COPY --from=compress /work/scipoptsuite-linux* .
# RUN tar -xzf scipoptsuite-linux.tar.gz
# RUN apk add --no-cache libgcc libstdc++ libgfortran
# RUN mkdir ldd-output test-output
# RUN ldd ./scip_install/bin/soplex 2>&1 > ldd-output/soplex.txt || true \
#     && cat ldd-output/soplex.txt
# RUN ldd ./scip_install/bin/scip 2>&1 > ldd-output/scip.txt || true \
#     && cat ldd-output/scip.txt
# RUN /scip_install/bin/soplex --version 2>&1 > test-output/soplex.log || true
# RUN /scip_install/bin/scip --version 2>&1 > test-output/scip.log || true

# # Check that soplex and scip can run on Debian
# FROM debian:bookworm-slim AS debian_tester
# COPY --from=compress /work/scipoptsuite-linux* .
# RUN tar -xzf scipoptsuite-linux.tar.gz
# RUN apt-get update && apt-get install -y libgfortran5
# RUN mkdir ldd-output test-output
# RUN ldd ./scip_install/bin/soplex 2>&1 > ldd-output/soplex.txt \
#     && cat ldd-output/soplex.txt
# RUN ldd ./scip_install/bin/scip 2>&1 > ldd-output/scip.txt \
#     && cat ldd-output/scip.txt
# RUN /scip_install/bin/soplex --version 2>&1 > test-output/soplex.log
# RUN /scip_install/bin/scip --version 2>&1 > test-output/scip.log

# FROM $ALPINE_IMAGE AS final
# COPY --from=compress /work/scipoptsuite-linux* .
# COPY --from=debian_tester /test-output ./test-output/debian
# COPY --from=debian_tester /ldd-output ./ldd-output/debian
# COPY --from=alpine_tester /test-output ./test-output/alpine
# COPY --from=alpine_tester /ldd-output ./ldd-output/alpine
# RUN find ./ldd-output -name '*.txt' -exec echo {} \; -exec cat {} \;
