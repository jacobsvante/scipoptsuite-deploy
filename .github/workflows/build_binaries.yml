name: build-binaries

# Authors:
# Mark Turner
# Mohammed Ghannam
# Stefan Vigerske
# Franziska Schloesser
# Julian Manns
# Michael Winkler
#
# This is the base workflow script for generating SCIP libraries.
# These libraries intended purpose is to be shipped with the various
# SCIP interfaces for different programming languages (e.g. Python and Rust).
# These libraries enable users of those interfaces to not have to install SCIP themselves outside of
# the traditional package managers of their preferred programming languages.
# For example, pip install pyscipopt will now install SCIP on the users machine directly.
#
# A major issue with the development of these scripts was to statically generate
# as many dependencies as possible. This way users require a minimal amount
# of system libraries to actually install via their preferred programming language.
# Any extensions to this script should keep this design philosophy in mind.
#
# Current support:
# Linux x86-64
# Linux AArch64
# MacOS x86-64
# MacOS AArch64
# Windows x86-64
#

env:
    SCIP_VERSION: "9.0.0"
    SOPLEX_VERSION: "7.0.0"
    IPOPT_VERSION: "3.14.16"

on:
    push:
        branches:
            - crosscompile
    workflow_dispatch:
        inputs:
            scip_version:
                type: string
                description: SCIP version to use
                required: true
                default: "9.0.0"
            soplex_version:
                type: string
                description: Soplex version to use
                required: true
                default: "7.0.0"
            ipopt_version:
                type: string
                description: IPOPT version to use
                required: true
                default: "3.14.16"

jobs:
    print-inputs:
        runs-on: ubuntu-latest
        steps:
            - name: Print inputs
              run: |
                  echo "SCIP version: ${{ github.event.inputs.scip_version }}"
                  echo "Soplex version: ${{ github.event.inputs.soplex_version }}"
                  echo "IPOPT version: ${{ github.event.inputs.ipopt_version }}"

    linux-build-binaries:
        runs-on: ubuntu-22.04
        strategy:
            fail-fast: false
            matrix:
                entry:
                    - os: linux
                      platform: linux/amd64
                    - os: linux
                      platform: linux/arm64/v8
                    - os: linux
                      platform: linux/386
                    - os: linux
                      platform: linux/arm/v6
                    - os: linux
                      platform: linux/arm/v7
                    - os: linux
                      platform: linux/ppc64le
                    - os: linux
                      platform: linux/s390x
        steps:
            - uses: actions/checkout@v4
            # apk add seems to need qemu for some triggers, even though we're
            # cross compiling...
            # See this guide for more info:
            # https://www.docker.com/blog/faster-multi-platform-builds-dockerfile-cross-compilation-guide/
            # (setup-qemu-action uses the mentioned tonistiigi/binfmt internally)
            - uses: docker/setup-qemu-action@v3
            - id: buildx
              uses: docker/setup-buildx-action@v3
              with:
                  platforms: |
                      linux/386
                      linux/amd64
                      linux/arm/v6
                      linux/arm/v7
                      linux/arm64/v8
                      linux/ppc64le
                      linux/riscv64
                      linux/s390x
            - run: echo ${{ steps.buildx.outputs }}
            - run: docker buildx ls
            - uses: docker/build-push-action@v5
              with:
                  push: false
                  file: Dockerfile.musl-cross
                  build-args: |
                      SCIP_VERSION=${{ github.event.inputs.scip_version || env.SCIP_VERSION }}
                      SOPLEX_VERSION=${{ github.event.inputs.soplex_version || env.SOPLEX_VERSION }}
                      IPOPT_VERSION=${{ github.event.inputs.ipopt_version || env.IPOPT_VERSION }}
                  platforms: ${{ matrix.entry.platform }}
                  outputs: |
                      type=local,dest=${{ github.workspace }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
            - uses: actions/upload-artifact@v4
              with:
                  # TODO: Extract artifacts from multiplatform docker image
                  path: ${{ github.workspace }}/libscip-${{ matrix.entry.os }}.zip
